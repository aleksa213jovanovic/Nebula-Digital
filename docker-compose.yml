version: '3.8'

services:
  transaction-app:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile-app
    ports:
      - "8081:8081"
    depends_on:
       transaction-db:
         condition: service_healthy
       nats:
         condition: service_started
    environment:
      - DB_HOST=transaction-db
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=transactionservice
      - APP_PORT=8081
      - NATS_URI=nats://nats:4222

  transaction-db:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile-db
    ports:
      - "5438:5432"
    environment:
      POSTGRES_DB: transactionservice
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./transaction-service/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U user -d transactionservice -h localhost" ]
        interval: 10s
        timeout: 5s
        retries: 5


  user-app:
    build:
      context: ./user-service
      dockerfile: Dockerfile-app
    ports:
      - "8082:8082"
    depends_on:
      user-db:
        condition: service_healthy
      nats:
        condition: service_started
    environment:
      - DB_HOST=user-db
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=userservice
      - APP_PORT=8082
      - NATS_URI=nats://nats:4222

  user-db:
    build:
      context: ./user-service
      dockerfile: Dockerfile-db
    ports:
      - "5437:5432"
    environment:
      POSTGRES_DB: userservice
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./user-service/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U user -d userservice -h localhost" ]
        interval: 10s
        timeout: 5s
        retries: 5


  nats:
    image: 'nats:latest'
    ports:
      - "4222:4222"
      - "8222:8222"
    hostname: nats-server
    depends_on:
      transaction-db:
        condition: service_healthy

networks:
  default:
    driver: bridge
